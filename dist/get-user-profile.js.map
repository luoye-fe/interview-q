{"version":3,"file":null,"sources":["../src/event-bus.js","../src/cache.js","../src/request-user-profile.js","../src/app.js"],"sourcesContent":["// 事件广播\nclass EventBus {\n\tconstructor() {\n\t\tthis.cache = {};\n\t}\n\ton(key, func) {\n\t\t(this.cache[key] || (this.cache[key] = [])).push(func);\n\t}\n\tonce(key, func) {\n\t\tfunction on() {\n\t\t\tthis.off(key, on);\n\t\t\tfunc.apply(this, arguments);\n\t\t}\n\t\tthis.on(key, on);\n\t}\n\toff(key) {\n\t\tthis.cache[key] = null;\n\t}\n\temit(key) {\n\t\tconst args = [...arguments];\n\t\targs.shift();\n\t\tconst stack = this.cache[key];\n\t\tif (stack && stack.length > 0) {\n\t\t\tstack.forEach(item => {\n\t\t\t\titem.apply(this, args);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default EventBus;\n","// 缓存\n// 直接存放在内存中，放到 ls 中也可\nclass Cache {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.cacheMs = this.options.cacheMs || 60 * 1000; // 默认缓存时间一分钟\n\t\tthis.cache = {};\n\t}\n\tset(key, value, ms) { // ms 可单独设置缓存时间\n\t\tthis.cache[key] = {\n\t\t\tval: value,\n\t\t\tsetTime: Date.now(),\n\t\t\tcacheTime: ms || this.cacheMs\n\t\t};\n\t}\n\tget(key) {\n\t\tthis.check(key);\n\t\treturn this.cache[key] ? this.cache[key].val : null;\n\t}\n\tdelete(key) {\n\t\tdelete this.cache[key];\n\t}\n\tdeleteAll() {\n\t\tthis.cache = {};\n\t}\n\tcheck(key) {\n\t\t// 检测是否过期，过期了删除\n\t\tlet cur = this.cache[key];\n\t\tif (cur && (Date.now() - cur.setTime) > cur.cacheTime) this.delete(key);\n\t}\n}\n\nexport default Cache;\n","// 现在有一个 Ajax 接口，根据用户 uid 获取用户 profile 信息，是一个批量接口。我把这个 ajax 请求封装成以下的异步函数\nexport default function requestUserProfile(uidList) { // uidList 是一个数组，最大接受 100 个 uid\n\tconsole.log('走接口啦', uidList.toString());\n\t// 这个方法的实现不能修改\n\n\t/** 先去重 */\n\tvar uidList = uidList || [];\n\tvar _tmp = {};\n\tvar _uidList = [];\n\tuidList.forEach(function(uid) {\n\t\tif (!_tmp[uid]) {\n\t\t\t_tmp[uid] = 1;\n\t\t\t_uidList.push(uid);\n\t\t}\n\t});\n\t_tmp = null;\n\tuidList = null;\n\n\treturn Promise.resolve().then(function() {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tsetTimeout(function() { // 模拟 ajax 异步，1s 返回\n\t\t\t\tresolve();\n\t\t\t}, 1000);\n\t\t}).then(function() {\n\t\t\tvar profileList = _uidList.map(function(uid) {\n\t\t\t\tif (uid < 0) { // 模拟 uid 传错，服务端异常，获取不到部分 uid 对应的 profile 等异常场景\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t\tnick: uid + 'Nick',\n\t\t\t\t\t\tage: 18\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn profileList.filter(function(profile) {\n\t\t\t\treturn profile !== null;\n\t\t\t});\n\t\t});\n\t});\n};\n\n// 现在我们有很多业务都需要根据 uid 获取 userProfile , 大多数业务的需求都是给一个 uid，获取 profile 。为了性能，我们需要把这个单个的请求合并成批量请求。\n\n// 例如，现在页面上 A 模块需要获取 uid 为 1 的 profile，B 模块需要 uid 为 2 的 profile， C 模块需要获取 uid 为 1 的profile\n// 这三个模块会单独调用下面这个方法获取 profile，假设这三次调用的时间非常接近(100ms 以内)，最终要求只发送一个 ajax 请求（只调用一次 requestUserProfile )，拿到这三个模块需要的 profile\n\n// 完成以下方法，接收一个参数 uid，返回一个 Promise，当成功请求到 profile 的时候， resolve 对应的profile , 请求失败 reject\n// 例如  getUserProfile(1).then(function(profile){ console.log(profile.uid === 1) // true });  // 假设请求成功了。\n","/*\n * 基本：先用节流函数将在设定时间间隔内的请求收集起来一起执行，多余100个的请求先处理100个，剩下的递归调用，每次处理100个，获取数据完毕之后用广播机制告知每个调用者相对应的数据，\n * 进一步：本地缓存一份已知的 profile list，设定缓存时间，缓存时间内不发起真实请求，从本地取\n * 再进一步：ES6 来实现\n * 再再进一步：模块化，eventBus 和 cache 可以封装起来，最后 export 一个函数，调用时 import 即可\n * 再再再进一步：rollup 构建，umd 模式，支持所有调用方式\n\n * 思考：错误处理的问题，原函数出错后直接把出错的 uid 过滤掉了，考虑真实情况，可以返回一个错误标志的对象，如 { uid: uid, error: true, e: '出错啦' } 然后调用者进行相应的处理\n * 思考：去重，es6 可以用 Set\n\n * 改进：如何在初始化时更快的获取数据／性能优化／错误处理\n\n * 优化1: 实例化时可以选择性的预缓存 user profile\n * 优化2: 每个 get 都可以 handle 到相应的 error，整个接口出错也可获取到错误\n * 优化3: for 循环优化，仅剩两次，一次获取完数据单独触发 done 事件，一次有出错单独触发 error 事件\n * 优化4: 有缓存时直接返回，不等待 debounce 完成\n */\n\nimport EventBus from './event-bus.js';\nimport Cache from './cache.js';\n\nimport requestUserProfile from './request-user-profile.js';\n\nconst ProfileCache = new Cache();\nconst Event = new EventBus();\n\nclass UserProfile {\n\tconstructor(options = {}) {\n\t\tthis.options = Object.assign({\n\t\t\tpreLoadList: []\n\t\t}, options);\n\t\tthis.cacheKey = 'user-profiles';\n\t\t// 预请求列表去重\n\t\tthis.queue = [...new Set(this.options.preLoadList)];\n\t\tthis.debounceRun = this.debounce(this.request.bind(this), 100);\n\t\tthis.debounceRun(this.queue);\n\t}\n\tget(id, noCache) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet possibleCachedVal = ProfileCache.get(id);\n\t\t\tif (possibleCachedVal) {\n\t\t\t\tresolve(possibleCachedVal);\n\t\t\t} else {\n\t\t\t\tthis.queue.push(id);\n\t\t\t\tEvent.on('done' + id, profile => {\n\t\t\t\t\tresolve(profile);\n\t\t\t\t});\n\t\t\t\tEvent.on('error' + id, err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t\tthis.debounceRun(this.queue, (e) => {\n\t\t\t\t\t// 接口出错了\n\t\t\t\t\tif (e) return reject(e);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tclear() {\n\t\t// clear all cache\n\t\tProfileCache.deleteAll();\n\t}\n\trequest(uidList = [], cb = function() {}) {\n\t\tconst _this = this;\n\t\tlet result = {};\n\t\t// 去重\n\t\tuidList = [...new Set(uidList)];\n\t\tloop();\n\t\tfunction loop () {\n\t\t\t// 取出 100 个递归调用\n\t\t\tlet extraList = uidList.splice(0, 100);\n\t\t\trequestUserProfile(extraList)\n\t\t\t\t.then(profiles => {\n\t\t\t\t\tprofiles.forEach(item => {\n\t\t\t\t\t\tresult[item.uid] = item;\n\t\t\t\t\t\t// 剩下的都是获取数据出错的 uid\n\t\t\t\t\t\textraList.splice(extraList.indexOf(item.uid), 1);\n\t\t\t\t\t\t// 缓存起来\n\t\t\t\t\t\tProfileCache.set(item.uid, item);\n\t\t\t\t\t\t// 触发完成\n\t\t\t\t\t\tEvent.emit('done' + item.uid, item);\n\t\t\t\t\t});\n\t\t\t\t\t// 获取失败的 uid 列表\n\t\t\t\t\textraList.forEach(item => {\n\t\t\t\t\t\tEvent.emit('error' + item, {\n\t\t\t\t\t\t\tuid: item,\n\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tif (uidList.length) return loop();\n\t\t\t\t\t_this.queue = [];\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\t_this.queue = [];\n\t\t\t\t\tcb(e, result);\n\t\t\t\t});\n\t\t}\n\t}\n\tdebounce(func, wait, immediate) {\n\t\tlet timeout;\n\t\treturn function() {\n\t\t\tconst _this = this;\n\t\t\tconst args = arguments;\n\t\t\tfunction later() {\n\t\t\t\ttimeout = null;\n\t\t\t\tif (!immediate) func.apply(_this, args);\n\t\t\t};\n\t\t\tconst callNow = immediate && !timeout;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t\tif (callNow) func.apply(_this, args);\n\t\t};\n\t};\n}\n\nexport default UserProfile;\n"],"names":["EventBus","cache","key","func","push","on","off","apply","arguments","args","shift","stack","length","forEach","Cache","options","cacheMs","value","ms","Date","now","check","val","cur","setTime","cacheTime","delete","requestUserProfile","uidList","log","toString","_tmp","_uidList","uid","Promise","resolve","then","reject","profileList","map","filter","profile","ProfileCache","Event","UserProfile","Object","assign","cacheKey","queue","Set","preLoadList","debounceRun","debounce","request","bind","id","noCache","possibleCachedVal","get","err","e","deleteAll","cb","_this","result","loop","extraList","splice","item","indexOf","set","emit","catch","wait","immediate","timeout","later","callNow","setTimeout"],"mappings":"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"}